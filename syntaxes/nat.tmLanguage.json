{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "nat",
	"scopeName": "source.nat",
	"patterns": [ { "include": "#expression" } ],
	"repository": {
		"expression": {
			"patterns": [
				{ "include": "#comment" },
				{ "include": "#keyword" },
				{ "include": "#operator" },
				{ "include": "#string" },
				{ "include": "#constant-and-special-var" }
			]
		},
		"keyword": {
			"patterns": [
				{
					"name": "keyword.control.nat",
					"match": "(?<!\\w)(else|for|if|in|return|while|print|throw|import)(?!\\w)"
				},
				{
					"name": "keyword.declaration.nat",
					"match": "(?<!\\w)(let|const|dom|class|extends)(?!\\w)"
				},
				{
					"name": "keyword.other.nat",
					"match": "(?<!\\w)(check)(?!\\w)"
				}
			]
		},
		"operator": {
			"patterns": [
				{
					"name": "keyword.operator.relational.nat",
					"match": "(==|!=|<=|>=)"
				},
				{
					"name": "keyword.operator.spread.nat",
					"match": "\\.\\."
				},
				{
					"name": "keyword.operator.assignment.nat",
					"match": "\\="
				},
				{
					"name": "keyword.operator.arithmetic.nat",
					"match": "(\\-|\\+|\\*|\\/|\\~\\/|%)"
				},
				{
					"name": "keyword.operator.logical.nat",
					"match": "(?<!\\w)(!|and|or)(?!\\w)"
				}
			]
		},
		"interpolation-element": {
			"name": "meta.template.expression.nat",
			"begin": "\\{",
			"beginCaptures": { "0": { "name": "punctuation.definition.interpolation.begin.nat" } },
			"end": "\\}",
			"endCaptures": { "0": { "name": "punctuation.definition.interpolation.end.nat" } },
			"patterns": [ { "include": "#expression" } ],
			"contentName": "meta.embedded.line.nat"
		},
		"string": {
			"name": "string.quoted.double.nat",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.nat",
					"match": "\\\\."
				},
				{ "include": "#interpolation-element" }
			]
		},
		"constant-and-special-var": {
			"patterns": [
				{
					"name": "constant.language.nat",
					"match": "(?<!\\w)(true|false|nil|undefined)(?!\\w)"
				},
				{
					"name": "variable.language.nat",
					"match": "(?<!\\w)(this|super)(?!\\w)"
				},
				{
					"name": "constant.numeric.nat",
					"match": "(?<!\\$)((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(?!\\$)"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.double-slash.nat",
					"match": "((//).*)$"
				}
			]
		}
	}
}